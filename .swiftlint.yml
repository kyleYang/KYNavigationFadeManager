disabled_rules: # rule identifiers to exclude from running
  - colon
  - comma
  - control_statement
  - force_cast
  - trailing_whitespace
  - cyclomatic_complexity
  - unused_closure_parameter
  - multiple_closures_with_trailing_closure
# opt_in_rules: # some rules are only opt-in
#   - empty_count
#   # Find all the available rules by running:
#   # swiftlint rules
included: # paths to include during linting. `--path` is ignored if present.
  - Sources
excluded: # paths to ignore during linting. Takes precedence over `included`.
  - Carthage
  - Pods
  - Tests
analyzer_rules: # Rules run by `swiftlint analyze` (experimental)
  - explicit_self

# configurable rules can be customized from this configuration file
# binary rules can set their severity level
force_try: # try语句判断
  severity: warning # explicitly
# rules that have both warning and error levels, can set just the warning level
# implicitly
line_length:  # 单行代码长度,默认error 120
  warning: 150
  error: 200
# they can set both implicitly with an array
type_body_length:
  - 300 # warning
  - 400 # error
# or they can set both explicitly
file_length:
  warning: 500
  error: 1200
# function both length
function_body_length:
  warning: 100
  error: 300
# naming rules can set warnings/errors for min_length and max_length
# additionally they can set excluded names
type_name:
  min_length: 1 # only warning
  max_length: # warning and error
    warning: 40
    error: 50
  excluded: iPhone # excluded via string
identifier_name:
  min_length: 1 # only min_length
  max_length:
    warning: 40
    error: 50 # only error
  excluded: # excluded via string array
    - id
    - URL
    - GlobalAPIKey
reporter: "xcode" # reporter type (xcode, json, csv, checkstyle, junit, html, emoji, sonarqube)
